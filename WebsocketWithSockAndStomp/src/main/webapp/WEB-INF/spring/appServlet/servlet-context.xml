<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- #5. appServlet-->
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Register Beans by Spring-container -->
	<context:component-scan base-package="com.kh.spring" />
	
	
	<!-- #8.로깅을 위한 interceptor등록 -->
	<!-- DispatcherServlet이 Controller를 호출하는 중간에 intercept한다. -->
	<!-- 그래서 이 설정은 web.xml의 DispatcherServlet의 servlet-context.xml에 있다. -->
	<interceptors>
		<interceptor>
			<mapping path="/**"/>
			<beans:bean id="loggerInterceptor" class="com.kh.spring.common.interceptor.LoggerInterceptor"/>
		</interceptor>
		<!-- 로그인체크용 interceptor등록 -->
		<interceptor>
			<mapping path="/member/memberView.do"/>
			<mapping path="/member/memberUpdate.do"/>		
			<!-- 스프링 3.2부터 exclude-mapping태그를 사용할 수 있음. -->
			<mapping path="/board/**/*.do"/>
        	<exclude-mapping path="/board/boardList.do"/>
			<beans:bean id="loginCheckInterceptor" class="com.kh.spring.common.interceptor.LoginCheckInterceptor"/>
		</interceptor>
	</interceptors>
	
	<!-- #10.1 Resolver for fileupload -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">   
		<beans:property name="maxUploadSize" value="10485760" />
	</beans:bean>
	
	<!-- #12.1 jsonView Bean / viewResolver -->
	<!-- BeanNameViewResolver : viewname to beanname-->
    <beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <beans:property name="order" value="1"/>
    </beans:bean>
	<beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView"/>
	
	<!-- #13.1 @Responsebody dependicy spring 5.x.x => MappingJackson2HttpMessageConverter -->
	<beans:bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jacksonMessageConverter"/>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- sockjs관련 빈등록하기 -->
	<!-- <beans:bean id="echoHandler" class="com.kh.spring.ws.EchoHandler" />
	<websocket:handlers>
		<websocket:mapping handler="echoHandler" path="/echo" />
		<websocket:sockjs />
	</websocket:handlers> -->
	
	<!-- stomp관련 빈등록하기 -->
	<!-- <websocket:message-broker application-destination-prefix="/spring">
		<websocket:stomp-endpoint path="/stomp">
			<websocket:handshake-interceptors>
				<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
			</websocket:handshake-interceptors>
			<websocket:sockjs session-cookie-needed="true"/>
		</websocket:stomp-endpoint>
		<websocket:simple-broker prefix="/hello, /chat"/>
	</websocket:message-broker> -->
	
</beans:beans>
